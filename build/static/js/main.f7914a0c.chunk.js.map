{"version":3,"sources":["components/WeatherLocation/Location/index.js","components/WeatherLocation/LocationImg/index.js","constants/WeatherIcons.js","components/WeatherLocation/WeatherData/WeatherTemperature.js","components/WeatherLocation/WeatherData/WeatherExtraInfo.js","components/WeatherLocation/WeatherData/index.js","components/WeatherLocation/index.js","App.js","data/LocationsInfo.js","serviceWorker.js","index.js"],"names":["Location","_ref","city","react_default","a","createElement","LocationImg","location","imagePath","concat","image","className","src","alt","ICONS","SUNNY","CLOUDY","CLOUDY_GUSTS","CLOUDY_WINDY","FOG","HAIL","HAZE","LIGHTNING","RAIN","RAIN_MIX","RAIN_WIND","SHOWERS","SLEET","SLEET_STORM","SNOW","SNOW_THUNDERSTORM","SNOW_WIND","SPRINKLE","STORM_SHOWERS","WINDY","SOLAR_ECLIPSE","HOT","CLOUDY_HIGH","LIGHT_WIND","SUNNY_OVERCAST","WeatherTemperature","_ref$weatherTemperatu","weatherTemperature","temperature","weatherState","icon","lib_default","name","size","getWeatherIcon","Math","round","getToFahrenheit","WeatherExtraInfo","humidity","wind","WeatherData","_location$weatherExtr","weatherExtraInfo","WeatherData_WeatherTemperature","WeatherData_WeatherExtraInfo","WeatherLocation","this","props","WeatherLocation_LocationImg","WeatherLocation_Location","WeatherLocation_WeatherData","Component","cities","cities_2","locations","otherLocations","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getOtherCities","state","btnOtherCitiesStatus","setState","getLocation","find","bind","assertThisInitialized","_this2","text_btnGetOtherCities","weatherLocationItems","map","index","key","components_WeatherLocation","type","onClick","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7914a0c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Location = ({city}) => {\n    return(\n        <div>{city}</div>\n    );\n};   \n\nexport default Location;","import React from 'react';\n\nconst LocationImg = ({location}) => {\n    const path = \"images/\";\n    const imagePath = `${path}${location.image}`;\n\n    return(\n        <div className=\"overflou\">\n             <img className=\"card-img-top\" src={imagePath} alt={location.city}></img>\n        </div>\n    );\n}    \n\nexport default LocationImg;","export const ICONS = {\n    \"SUNNY\" : \"day-sunny\",\n    \"CLOUDY\" : \"cloudy\",\n    \"CLOUDY_GUSTS\" : \"cloudy-gusts\",\n    \"CLOUDY_WINDY\" : \"cloudy-windy\",\n    \"FOG\" : \"day-fog\",\n    \"HAIL\" : \"hail\",\n    \"HAZE\" : \"haze\",\n    \"LIGHTNING\" : \"lightning\",\n    \"RAIN\" : \"rain\",\n    \"RAIN_MIX\" : \"rain-mix\",\n    \"RAIN_WIND\" : \"rain-wind\",\n    \"SHOWERS\" : \"showers\",\n    \"SLEET\" : \"sleet\",\n    \"SLEET_STORM\" : \"sleet-storm\",\n    \"SNOW\" : \"snow\",\n    \"SNOW_THUNDERSTORM\" : \"snow-thunderstorm\",\n    \"SNOW_WIND\" : \"snow-wind\",\n    \"SPRINKLE\" : \"sprinkle\",\n    \"STORM_SHOWERS\" : \"storm-showers\",\n    \"WINDY\" : \"windy\",\n    \"SOLAR_ECLIPSE\" : \"solar-eclipse\",\n    \"HOT\" : \"hot\",\n    \"CLOUDY_HIGH\" : \"cloudy-high\",\n    \"LIGHT_WIND\" : \"light-wind\",\n    \"SUNNY_OVERCAST\" : \"day-sunny-overcast\"\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WeatherIcons from 'react-weathericons';\nimport {ICONS} from './../../../constants/WeatherIcons';\n\nconst getWeatherIcon = weatherState => {\n    const icon = ICONS[weatherState];\n    const iconSize = \"lg\";\n    \n    if (icon)\n        return <WeatherIcons name={icon} size={iconSize} />;\n    else \n        return <WeatherIcons name={ICONS[\"SUNNY\"]} size={iconSize} />;\n};\n\nconst getToFahrenheit = temperature => (Math.round((temperature * 1.8) + 32));\n\nconst WeatherTemperature = ({weatherTemperature: {temperature, weatherState}}) => (\n    <div>\n        <p className=\"card-text\">\n            { getWeatherIcon(weatherState) } <span>{ weatherState }</span> \n            {` ${temperature}  C˚`}|{ ` `+ getToFahrenheit(temperature) +` F˚`}\n        </p>\n    </div>\n);\n\nWeatherTemperature.propTypes = {\n    weatherTemperature: PropTypes.shape({\n        temperature: PropTypes.number.isRequired,\n        weatherState: PropTypes.string.isRequired\n    })\n}; \n\nexport default WeatherTemperature;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst WeatherExtraInfo = ({humidity, wind}) => (\n    <div>\n        <p className=\"card-text\">\n            <span>{`Humidity: ${humidity}% `}</span>\n            <br/>\n            <span> {`Wind: ${wind}`}</span>\n        </p>\n    </div>\n);\n\nWeatherExtraInfo.propTypes = {\n    humidity: PropTypes.number.isRequired,\n    wind: PropTypes.string.isRequired\n}; \n\nexport default WeatherExtraInfo;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WeatherTemperature from './WeatherTemperature';\nimport WeatherExtraInfo from './WeatherExtraInfo';\n\nconst WeatherData = ({location}) => {\n\n    //const {temperature, weatherState} = location.weatherTemperature;\n    const {humidity, wind} = location.weatherExtraInfo;\n    \n    return(<div> \n        <WeatherTemperature weatherTemperature={location.weatherTemperature}></WeatherTemperature>\n        <WeatherExtraInfo humidity={humidity} wind={wind}></WeatherExtraInfo>\n    </div>);\n};\n\nWeatherData.propTypes = {\n    location: PropTypes.object.isRequired\n};\n\nexport default WeatherData;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport LocationImg from './LocationImg';\nimport WeatherData from './WeatherData';\n\n\nclass WeatherLocation extends Component {\n\n    render(){\n\n        const {location} = this.props;\n        \n        return(\n            <div className=\"card\"> \n            <LocationImg location={location}></LocationImg>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\"><Location city={location.city}></Location></h5>\n                    <WeatherData location={location}></WeatherData>\n                </div>        \n            </div>\n        );\n    }\n};\n\nWeatherLocation.propTypes = {\n    location: PropTypes.object.isRequired\n}; \n\nexport default WeatherLocation;","import React, { Component } from 'react';\nimport WeatherLocation from './components/WeatherLocation';\nimport './App.css';\nimport {LOCATIONS_INFO, LOCATIONS_INFO_2} from './data/LocationsInfo';\n\nconst cities = ['Bogotá', 'Medellín', 'Cali', 'Barranquilla','Cartagena','Bucaramanga'];\nconst cities_2 = ['Cúcuta', 'Manizales', 'Santa Marta', 'Pereira','Villavicencio','Tunja'];\n\nconst locations = LOCATIONS_INFO;\nconst otherLocations = LOCATIONS_INFO_2;\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n        btnOtherCitiesStatus: false,\n        cities: cities,\n        locations: locations\n    };\n    this.getOtherCities = this.getOtherCities.bind(this);\n  }\n\n  getOtherCities = () => {\n    if(!this.state.btnOtherCitiesStatus){\n      this.setState({\n        cities: cities_2,\n        locations: otherLocations,\n        btnOtherCitiesStatus: true,\n      });\n    } else {\n      this.setState({\n        cities: cities,\n        locations: locations,\n        btnOtherCitiesStatus: false\n      });\n    }\n  }\n\n  getLocation = (city) => this.state.locations.find((location) =>  location.city === city );\n\n  render() {\n\n    const cities = this.state.cities;\n\n    const text_btnGetOtherCities = this.state.btnOtherCitiesStatus ? 'Go back' : 'Other cities';\n\n    let weatherLocationItems = cities.map((city, index) => { \n      let location = this.getLocation(city);\n      return(<div className=\"col-md-4 mb-3\" key={\"location_\" + index}>\n        <WeatherLocation location={location}></WeatherLocation>\n      </div>);\n    });\n\n    return (\n        <div>\n          <div className=\"row mt-2 mb-2\">\n            <div className=\"col-md-10\">\n              <h1>Colombia Weather Forecast</h1>\n            </div>\n            <div className=\"col-md-2 text-md-right my-auto\">\n              <button type=\"button\" className=\"btn btn-primary\" onClick={this.getOtherCities}>{text_btnGetOtherCities}</button>\n            </div>  \n          </div>\n          <div className=\"row\">\n            {weatherLocationItems}     \n          </div>\n        </div>\n    );\n\n  }\n}\n\nexport default App;\n","export const LOCATIONS_INFO = [{city: \"Bogotá\", image:\"01.jpg\", weatherTemperature: {temperature: 17, weatherState: \"SUNNY\"}, weatherExtraInfo: {humidity: 74, wind:\"8 Kms/h\" }}, \n                   {city: \"Medellín\", image:\"02.jpg\", weatherTemperature: {temperature: 23, weatherState: \"HAIL\"}, weatherExtraInfo: {humidity: 81, wind:\"6 Kms/h\" }}, \n                   {city: \"Cali\", image:\"03.jpg\", weatherTemperature: {temperature: 28, weatherState: \"FOG\"}, weatherExtraInfo: {humidity: 66, wind:\"8 Kms/h\" }},\n                   {city: \"Cartagena\", image:\"04.jpg\", weatherTemperature: {temperature: 26, weatherState: \"SUNNY\"}, weatherExtraInfo: {humidity: 83, wind:\"21 Kms/h\" }}, \n                   {city: \"Barranquilla\", image:\"05.jpg\", weatherTemperature: {temperature: 24, weatherState: \"WINDY\"}, weatherExtraInfo: {humidity: 85, wind:\"23 Kms/h\" }}, \n                   {city: \"Bucaramanga\", image:\"06.jpg\", weatherTemperature: {temperature: 25, weatherState: \"CLOUDY\"}, weatherExtraInfo: {humidity: 78, wind:\"8 Kms/h\" }}   \n                  ];\n\nexport const LOCATIONS_INFO_2 = [{city: \"Cúcuta\", image:\"07.jpg\", weatherTemperature: {temperature: 27, weatherState: \"CLOUDY\"}, weatherExtraInfo: {humidity: 74, wind:\"8 Kms/h\" }}, \n    {city: \"Pereira\", image:\"08.jpg\", weatherTemperature: {temperature: 23, weatherState: \"HAIL\"}, weatherExtraInfo: {humidity: 81, wind:\"6 Kms/h\" }}, \n    {city: \"Manizales\", image:\"11.jpg\", weatherTemperature: {temperature: 28, weatherState: \"FOG\"}, weatherExtraInfo: {humidity: 66, wind:\"8 Kms/h\" }},\n    {city: \"Santa Marta\", image:\"10.jpg\", weatherTemperature: {temperature: 26, weatherState: \"SUNNY\"}, weatherExtraInfo: {humidity: 83, wind:\"21 Kms/h\" }}, \n    {city: \"Villavicencio\", image:\"09.jpg\", weatherTemperature: {temperature: 24, weatherState: \"WINDY\"}, weatherExtraInfo: {humidity: 85, wind:\"23 Kms/h\" }}, \n    {city: \"Tunja\", image:\"12.jpg\", weatherTemperature: {temperature: 25, weatherState: \"CLOUDY\"}, weatherExtraInfo: {humidity: 78, wind:\"8 Kms/h\" }}   \n];","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}